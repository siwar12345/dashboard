{"version":3,"sources":["components/Caption.js","utils/kpiData.js","components/Kpi.js","components/Chart.js","components/Legendcharpie.js","components/Comptes.js","components/password.js","components/nbacc√©es.js","utils/chartConfig.js","utils/config.js","components/Charts.js","components/Dashboard.js","pages/SignUpForm.js","components/SignInForm.js","App.js","serviceWorker.js","index.js","assets/doller.svg","assets/rss.svg","assets/trophy.svg","assets/star.svg"],"names":["Caption","caption","react_default","a","createElement","className","kpiData","Netflix","id","value","icon","feed","iconType","dollar","trophy","star","Amazon","Hulu","HBO","Component","ReactFC","fcRoot","FusionCharts","Charts","overlapp","widgets","power","map","world","FusionTheme","Chart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","chart","React","createRef","state","datasource","initialized","bind","assertThisInitialized","options","creditLabel","ReactDOM","unmountComponentAtNode","findDOMNode","current","ReactFC_default","assign","fcEvent-initialized","ref","Legend","legend","Fragment","PureComponent","Legendcharpie","legendMarkup","legendSet","data","datasets","set","i","datapoint","labels","concat","Label","replace","key","onClick","e","handleLengendOnClick","data-idx","data-quantity","style","borderColor","backgoundColor","backgroundColor","inst","chartInstance","el","document","getElementById","currentTarget","classList","contains","remove","add","t","getAttribute","meta","config","_meta","first","keys","hidden","update","generateLegend","setState","_this2","_this$props","width","height","position","es","display","LegendCallback","Legendcharpie_Legend","Subscribers","alt","Legendcharpie_Legendcharpie","label","components_Chart","subscriptionConfig","demogrphyconfig","AwardRating","imdbRatingConfig","dataSource","sort","b","reverse","awardConfigs","src","chartConfig","revenueChartCosmatics","bgcolor","canvasBgColor","animation","theme","plotfillalpha","plotFillAngle","showCanvasBorder","showLabels","divLineAlpha","divlineColor","showYAxisValues","showdivline","yaxisminvalue","placeValuesInside","showLegend","showShadow","paletteColors","drawAnchors","showAlternateHGridColor","drawCrossLine","plotColorinTooltip","baseFontColor","valueFontColor","valueFontSize","baseFontSize","baseFont","toolTipBgColor","toolTipColor","toolTipBorderColor","tooltipBorderAlpha","showToolTipShadow","toolTipPadding","numberPrefix","formatNumberScale","numberScaleUnit","numberScaleValue","plotToolText","demographyChartCosmatics","pieRadius","doughnutRadius","plotBorderalpha","enableSlicing","enableSmartLabels","showHoverEffect","plotHoverEffect","enableRotation","plotBorderHoverAlpha","showlegend","startingAngle","labelFontColor","smartLineColor","subscriptionChartCosmatics","numbersuffix","plotSpacePercent","showdivlineValues","crossLineColor","crossLineAlpha","showLimits","showValues","divlineAlpha","awardChartCosmatics","shadow","legendPadding","legenditemfontcolor","subregionChartCosmatics","labelfontcolor","legendItemFontSize","showvalue","showBorder","borderAlpha","fillAlpha","borderThickness","showEntityHoverEffect","labelFontcolor","legendBorderThickness","entityToolText","imdbRatingChartCosmatics","showDivLineValues","axisLineAlpha","yaxislinecolor","showYAxisLine","anchorRadius","revenueChartConfigs","type","containerBackgroundOpacity","dataFormat","yaxismaxvalue","categories","category","dataset","renderAs","chartCosmatics","yaxisMaxValue","yAxisMaxValue","seriesname","subRegion","colorrange","minvalue","startlabel","endlabel","code","gradient","alpha","color","maxvalue","useHoverColor","chartData","title","displayTitle","text","location","fontSize","displayLegend","legendPosition","defaultProps","Dashboard","menuClick","KpiData","DataSource","kpiClick","sub","scrollIntoView","block","behavior","rev","award","menus","active","getchartData","components_Caption","Comptes","components_password","awardValue","awardIcon","ratingValue","ratingIcon","components_Charts","SignUpForm","email","password","name","hasAgreed","handleChange","handleSubmit","target","checked","defineProperty","preventDefault","console","log","onSubmit","htmlFor","placeholder","onChange","href","react_router_dom","to","SignInForm","activeClassName","App","basename","exact","react_router","path","component","bath","Boolean","window","hostname","match","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f09bfb52.chunk.js","sourcesContent":["import React from 'react';\nconst Caption =(caption)=>{\nreturn(\n <section className=\" section is-header\">\n        <h1 className=\"is-underlined\">{caption.caption}</h1>\n </section>\n);\n}\nexport default Caption","import dollar from '../assets/doller.svg';\nimport feed from '../assets/rss.svg';\nimport trophy from '../assets/trophy.svg';\nimport star from '../assets/star.svg';\nexport default {\n    Netflix: [\n        { id: \"Subscribers\", value: \"539.8M\", icon: feed,iconType:\"badge is-feed\" },\n        { id: \"Revenue\", value: \"12.8B\", icon: dollar,iconType:\"badge is-dollar\", },\n        { id: \"Emmy Awards\", value: \"23\", icon: trophy, iconType:\"badge is-trophy\" },\n        { id: \"IMDb Rating\", value: \"8.34\", icon: star,iconType:\"badge is-star\" }\n    ],\n    Amazon: [\n        { id: \"Subscribers\", value: \"815M\", icon: feed,iconType:\"badge is-feed\" },\n        { id: \"Revenue\", value: \"20.5B\", icon: dollar,iconType:\"badge is-dollar\" },\n        { id: \"Emmy Awards\", value: \"5\", icon: trophy, iconType:\"badge is-trophy\" },\n        { id: \"IMDb Rating\", value: \"7.58\", icon: star,iconType:\"badge is-star\" }\n    ],\n    Hulu: [\n        { id: \"Subscribers\", value: \"25M\", icon: feed,iconType:\"badge is-feed\" },\n        { id: \"Revenue\", value: \"2.85B\", icon: dollar,iconType:\"badge is-dollar\" },\n        { id: \"Emmy Awards\", value: \"1\", icon: trophy, iconType:\"badge is-trophy\" },\n        { id: \"IMDb Rating\", value: \"7.07\", icon: star,iconType:\"badge is-star\" }\n    ],\n    HBO: [\n        { id: \"Subscribers\", value: \"150M\", icon: feed,iconType:\"badge is-feed\" },\n        { id: \"Revenue\", value: \"6B\", icon: dollar,iconType:\"badge is-dollar\" },\n        { id: \"Emmy Awards\", value: \"6\", icon: trophy, iconType:\"badge is-trophy\" },\n        { id: \"IMDb Rating\", value: \"8.04\", icon: star,iconType:\"badge is-star\" }\n    ]\n\n\n}","import React, { Component } from 'react';\nclass Kpi extends Component {\n    render() {\n        const cardlist = this.props.cards.map(kpi => {\n\n            return (\n                <a className=\"column is-tablet is-one-quarter-desktop is-half-tablet is-full-mobile\" key={kpi.id} href=\"#section\" onClick={() => { this.props.handleClick(kpi.id) }}>\n                    <div className=\"card\">\n                        <div className=\"card-content\">\n                            <div className=\"columns columns-kpi \">\n                                <div className=\"column header\">\n                                    <div className=\"column indicator\" >{kpi.value}</div>\n                                    <div className={kpi.iconType}>\n                                        <img src={kpi.icon} alt=\"\" />\n                                    </div>\n                                </div>\n\n                            </div>\n                            <div className=\"sub-indicator\">{kpi.id}</div>\n                        </div>\n                    </div>\n                </a>\n            \n            );\n        });\n        return (\n            <div className=\"columns is-mobile\">\n            { cardlist }\n            </div>\n\n        );\n    }\n}\nexport default Kpi;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport FusionCharts from \"fusioncharts\"\nimport Charts from \"fusioncharts/fusioncharts.charts\";\nimport widgets from \"fusioncharts/fusioncharts.widgets\";\nimport power from \"fusioncharts/fusioncharts.powercharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport map from \"fusioncharts/fusioncharts.maps\";\nimport world from \"fusioncharts/maps/fusioncharts.world\";\nimport overlapp from \"fusioncharts/fusioncharts.overlappedcolumn2d\";\nimport ReactFC from 'react-fusioncharts';\n\nReactFC.fcRoot(FusionCharts, Charts, overlapp, widgets, power, map, world, FusionTheme);\nclass Chart extends Component {\n    constructor(props) {\n        super(props);\n        this.chart = React.createRef();\n        this.state = {\n            datasource: {}\n        }\n        this.initialized = this.initialized.bind(this);\n    }\n\n    initialized(chart) {\n        FusionCharts.options.creditLabel = false;\n       \n\n    }\n    componentDidMount(){\n        ReactDOM.unmountComponentAtNode(ReactDOM.findDOMNode(this.chart.current));\n    }\n    componentWillUnmount() {\n      \n       ReactDOM.unmountComponentAtNode(ReactDOM.findDOMNode(this.chart.current));\n    }\n\n    render() {\n        return (\n           \n            <ReactFC\n                {...this.props.datasource}\n                fcEvent-initialized={this.initialized} \n                ref={this.chart}\n            />\n\n        );\n    }\n}\nexport default Chart\n","\r\n\r\nimport React, { Component ,PureComponent } from 'react'; \r\nimport { Pie } from \"react-chartjs-2\"; \r\n\r\n\r\n\r\n\r\nclass Legend extends PureComponent {\r\n    render(){\r\n    let legend = this.props.legend\r\n                  //.filter(item => item.props[\"data-quantity\"] > 0)\r\n                  //.sort((a,b) => b.props['data-quantity'] - a.props[\"data-quantity\"] );\r\n  return(\r\n    <>\r\n    <ul className=\"password\">\r\n    {legend}\r\n    \r\n    </ul>\r\n\r\n\r\n    </>\r\n\r\n)\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default class Legendcharpie extends Component{\r\n   constructor(props){\r\n       super(props);\r\n       this.state ={\r\n           Legend: []\r\n       }\r\n   }\r\n        componentDidMount(){\r\n\r\n        const legend = this.chart && this.chart.chartInstance.generateLegend()\r\n        this.setState({\r\n            legend\r\n        });\r\n    }\r\n    legendMarkup=chart =>{\r\n      const legendSet = chart.data.datasets[0];\r\n      const legend = legendSet.data.map((set,i ) => {\r\n          let datapoint = chart.data.labels[i];\r\n          if (datapoint){\r\n              return(\r\n                  <li\r\n                  id={`${legendSet.Label.replace(/\\s/g,\"\")}`}\r\n                  key={datapoint}\r\n                  onClick={e => this.handleLengendOnClick(e)}\r\n                  className=\"legend--item\"\r\n                  data-idx={i}\r\n                  data-quantity={legendSet.data[i]}\r\n                  style={{borderColor: legendSet.backgoundColor[i]}}\r\n                  >\r\n                  <mark\r\n                  style={{\r\n\r\n                    backgroundColor: legendSet.backgroundColor[i] || \"#e5e5e5\"\r\n                  }}\r\n                  >\r\n                      {legendSet.data[i]}\r\n                  </mark>\r\n                  {`${datapoint.replace(/\\(\\d{1,6}\\)$/g,\"\")}`}\r\n                  </li>\r\n              )\r\n          }\r\n\r\n            return \"\";\r\n          \r\n      });\r\n      return legend;\r\n    }\r\n      handleLengendOnClick = e => {\r\n        let inst = this.chart.chartInstance;\r\n        let el = document.getElementById(e.currentTarget.id);\r\n        if (el.classList.contains(\"btn-disabled\")){\r\n            el.classList.remove(\"btn-disabled\")\r\n        }\r\n        else{\r\n            el.classList.add(\"btn-disabled\")\r\n        }\r\n        let t= el.getAttribute(\"data-idx\")\r\n        let meta = inst.config.data.datasets[0]._meta;\r\n        let  first = Object.keys(meta)[0];\r\n        meta[first].data[t].hidden = !meta[first].data[t].hidden;\r\n        inst.update();\r\n     \r\n    };\r\n    render(){\r\n        const{legend}=this.state;\r\n        let { width , height } = this.props;\r\n        return(\r\n            <div style={{position:'relative', width,  height}}> \r\n            <Pie\r\n            width= {width}\r\n            height={height}\r\n            ref={el => (this.chart = el)}\r\n            data={this.props.data}\r\n            options={{\r\n                Legend:{\r\n                    display: false\r\n            },\r\n            LegendCallback: this.legendMarkup\r\n            }}\r\n            \r\n             \r\n            />\r\n\r\n            <Legend\r\n\r\n       ref={el => (this.legend = el)}\r\n     Legend={legend}\r\n     handleLengendOnClick={e => this.handleLengendOnClick(e)}\r\n            />\r\n            </div>\r\n        )\r\n    \r\n    }\r\n\r\n\r\n}","import React, { Component } from 'react';\nimport Chart from './Chart';\nimport Legendcharpie from './Legendcharpie';\n\nclass Subscribers extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n\n    }\n    \n    render() {\n        return (\n            <section id=\"subscribers\" className=\"section is-top-padded\">\n                <span className=\"has-image\">\n                    <span className=\"badge is-feed\">\n                        <img  alt=\"\" /></span>\n                    <h3 className=\"snapshot image-has-text\"> information sur les comptes d'utlisateur </h3>\n                   \n                </span>\n                <div className=\"tile is-ancestor\">\n                    <div className=\"tile is-6 is-parent\">\n                        <div className=\"tile is-12 is-child box\">\n                            <p className=\"sub-caption\"> comptes cr√©es </p>\n                            {//blasetchar<Chart datasource={this.props.datasource.subRegion} /> -->\n                            }\n                             <Legendcharpie\n        width={400}\n   data={{ \n            \n      labels: [\n          \"compte inactif pendant 1 mois \",\n          \"compte inactif pendant 3 mois\",\n          \"compte inactif pendant 6 mois\",\n          \"compte inactif pendant 9 mois\",\n         \n      ],\n      datasets: [\n          { label: \"oil prices\",\n              data: [ 86.2, 52.2, 51.2, 50.2],\n              backgroundColor: [\n          \n                  \"#FF6384\",\n                  \"#63FF84\",\n                  \"#84FF63\",\n                 \n                  \"#6384FF\"\n              ]\n          }]\n        }}\n  height ={400}\n  />\n\n                        </div>\n                    </div>\n                    <div className=\"tile is-6 is-vertical is-parent\">\n                        <div className=\"tile is-child box\">\n                            <p className=\"sub-caption\">demande sur les comptes</p>\n                            <Chart datasource={this.props.datasource.subscriptionConfig} />\n                        </div>\n                        <div className=\"tile is-child box\">\n                            <p className=\"sub-caption\">nombre des comptes actifs </p>\n                            <Chart datasource={this.props.datasource.demogrphyconfig} />\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\nexport default Subscribers","import React, { Component } from 'react';\nimport Chart from './Chart';\nclass AwardRating extends Component {\n    render() {\n        this.props.datasource.imdbRatingConfig.dataSource.data.sort((a,b)=>{return a.value-b.value}).reverse();\n        return (\n           \n                <div className=\"columns is-multiline is-paddingless\">\n                    <div className=\"column  is-half-desktop is-half-fullhd\">\n                        <span className=\"has-image\">\n                            <span className=\"badge is-trophy\">\n                                <img alt=\"\" /></span>  <h3 className=\"snapshot image-has-text\">information sur les traces</h3>\n                            \n                        </span>\n                        <div className=\"card\">\n                            <div className=\"card-content\">\n                                <p className=\"sub-caption\">nombre des traces ayant une ataque r√©ussite </p>\n                                \n                                <Chart datasource={this.props.datasource.awardConfigs} />\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"column is-half-desktop is-half-fullhd\">\n                        <span className=\"has-image\">\n                            <span className=\"badge is-star\">\n                        <img src={this.props.icon} alt=\"\" /></span>  <h3 className=\"snapshot image-has-text\">information sur les mots de passe </h3>\n                          \n                          \n                        </span>\n                        <div className=\"card\">\n                            <div className=\"card-content\">\n                                <p className=\"sub-caption\">nombre des mots de passe faible </p>\n                                \n                                <Chart datasource={this.props.datasource.imdbRatingConfig} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n          \n        );\n    }\n}\nexport default AwardRating","import React, { Component } from 'react';\nimport Chart from './Chart';\nclass Revenue extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n\n    }\n\n    render() {\n        return (\n            <section id=\"revenue\" className=\"section\">\n                <span className=\"has-image\">\n                    <span className=\"badge is-dollar\">\n                        <img src={this.props.icon} alt=\"\" /></span>  <h3 className=\"snapshot image-has-text\">nombre d'acc√©es en dehors de plage horaire</h3>\n                    \n                </span>\n                <div className=\"columns is-multiline is-paddingless\">\n                    <div className=\"column is-full-tablet is-full-desktop is-fullhd \">\n                        <div className=\"card\">\n                            <div className=\"card-content\">\n                                <p className=\"sub-caption\">nombre des acc√©es</p>\n                                <p className=\"is-smaller\"></p>\n                                <Chart datasource={this.props.datasource.revenueChartConfigs} />\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}\nexport default Revenue","export default {\n    revenueChartCosmatics: {\n        bgcolor: \"#282A2E\",\n        canvasBgColor: \"#282A2E\",\n        animation: \"0\",\n        theme: \"fusion\",\n        plotfillalpha: \"15\",\n        plotFillAngle: \"90\",\n        showCanvasBorder: \"0\",\n        showLabels: \"1\",\n        divLineAlpha: \"50\",\n        divlineColor: \"#434456\",\n        showYAxisValues: \"1\",\n        showdivline: \"1\",\n        yaxisminvalue: \"1000000000\",\n        placeValuesInside: \"0\",\n        showLegend: \"0\",\n        showShadow: \"0\",\n        paletteColors: \"#62B58F\",\n        drawAnchors: \"0\",\n        showAlternateHGridColor: \"0\",\n        drawCrossLine: \"0\",\n        plotColorinTooltip: \"0\",\n        baseFontColor: \"#ffffff\",\n        valueFontColor: \"#b4b4b6\",\n        valueFontSize: \"14\",\n        baseFontSize: \"12\",\n        baseFont: \"Roboto\",\n        toolTipBgColor: \"#525357\",\n        toolTipColor: \"#F8F8F8\",\n        toolTipBorderColor: \"#525357\",\n        tooltipBorderAlpha: \"20\",\n        showToolTipShadow: \"1\",\n        toolTipPadding: \"10\",\n        numberPrefix: \"$\",\n        formatNumberScale: \"1\",\n        numberScaleUnit: \"B\",\n        numberScaleValue: \"1000000000\",\n        plotToolText: \"<b>Global Revenue</b></br><b>Year : </b>$label</br><b>Revenue :</b> $dataValue\"\n\n    },\n    demographyChartCosmatics: {\n        bgcolor: \"#282A2E\",\n        pieRadius: \"50\",\n        doughnutRadius: \"40\",\n        paletteColors: \"#D9D4F6,#8E81E3,#6957DA\",\n        canvasBgColor: \"#282A2E\",\n        plotBorderalpha: \"0\",\n        theme: \"fusion\",\n        enableSlicing: \"0\",\n        enableSmartLabels:\"0\",\n        showHoverEffect:\"0\",\n        plotHoverEffect:\"0\",\n        enableRotation: \"0\",\n        plotBorderHoverAlpha: \"0\",\n        showlegend: \"0\",\n        startingAngle: \"90\",\n        valueFontColor: \"#ffffff\",\n        labelFontColor: \"#ffffff\",\n        smartLineColor: \"#81809C\",\n        baseFontSize: \"12\",\n        baseFontColor: \"#61DAFB\",\n        toolTipBgColor: \"#525357\",\n        toolTipColor: \"#F8F8F8\",\n        toolTipBorderColor: \"#525357\",\n        tooltipBorderAlpha: \"20\",\n        showToolTipShadow: \"1\",\n        toolTipPadding: \"10\",\n        plotToolText: \"<b>Age Group :</b> $label</br> <b>Subscribers :</b> $datavalue%\"\n\n    },\n    subscriptionChartCosmatics: {\n        theme: \"fusion\",\n        bgcolor: \"#282A2E\",\n        canvasBgColor: \"#282A2E\",\n        paletteColors: \"#6957DA\",\n        numbersuffix: \"M\",\n        plotSpacePercent: \"60\",\n        formatNumberScale: \"1\",\n        showdivlineValues: \"0\",\n        drawCrossLine: \"1\",\n        crossLineColor: \"#575961\",\n        crossLineAlpha: \"15\",\n        showLimits: \"0\",\n        showValues: \"1\",\n        divlineAlpha: \"0\",\n        baseFontSize: \"12\",\n        baseFont: \"Roboto\",\n        toolTipBgColor: \"#525357\",\n        toolTipColor: \"#F8F8F8\",\n        toolTipBorderColor: \"#525357\",\n        tooltipBorderAlpha: \"20\",\n        showToolTipShadow: \"1\",\n        toolTipPadding: \"10\",\n        plotToolText: \"<b>Year :</b> $label </br><b>Subscribers :</b> $datavalue\",\n        labelFontColor: \"#ffffff\",\n        valueFontColor: \"#b4b4b6\"\n\n    },\n    awardChartCosmatics: {\n        bgcolor: \"#282A2E\",\n        canvasBgColor: \"#282A2E\",\n        showLabels: \"1\",\n        drawCrossLine: \"0\",\n        divLineAlpha: \"0\",\n        showYAxisValues: \"0\",\n        showValues: \"1\",\n        placeValuesInside: \"0\",\n        shadow: \"0\",\n        legendPadding: \"0\",\n        showShadow: \"0\",\n        paletteColors: \"#942F1C,#DD614A\",\n        drawAnchors: \"0\",\n        showAlternateHGridColor: \"0\",\n        legenditemfontcolor: \"#ffffff\",\n        plotColorinTooltip: \"0\",\n        valueFontColor: \"#b4b4b6\",\n        labelFontColor: \"#ffffff\",\n        baseFontSize: \"12\",\n        baseFont: \"Roboto\",\n        toolTipBgColor: \"#525357\",\n        toolTipColor: \"#F8F8F8\",\n        toolTipBorderColor: \"#525357\",\n        tooltipBorderAlpha: \"20\",\n        showToolTipShadow: \"1\",\n        toolTipPadding: \"10\",\n        plotToolText: \"<b>Year :</b> $label</br><b>$seriesname :</b> $datavalue\",\n        theme: \"fusion\"\n\n    },\n    subregionChartCosmatics: {\n        bgcolor: \"#282A2E\",\n        canvasBgColor: \"#282A2E\",\n        numbersuffix: \"M\",\n        formatNumberScale: \"0\",\n        baseFontSize: \"12\",\n        baseFontColor:\"#81809C\",\n        labelfontcolor:\"#81809C\",\n        legendItemFontSize: \"12\",\n        baseFont: \"Roboto\",\n        showvalue: \"0\",\n        showBorder: \"1\",\n        borderAlpha: \"80\",\n        fillAlpha: \"100\",\n        borderColor: \"#5F636E\",\n        borderThickness: \"1\",\n        showHoverEffect: \"1\",\n        showEntityHoverEffect: \"1\",\n        labelFontcolor:\"#81809C\",\n        legenditemfontcolor: \"#ffffff\",\n        toolTipBgColor: \"#525357\",\n        toolTipColor: \"#F8F8F8\",\n        toolTipBorderColor: \"#525357\",\n        tooltipBorderAlpha: \"20\",\n        showToolTipShadow: \"1\",\n        toolTipPadding: \"10\",\n        legendBorderThickness: \"5\",\n        entityToolText: \"<b>Region : </b>$lname</br><b> Subscribers : </b>$dataValue\",\n        theme: \"fusion\"\n\n    },\n    imdbRatingChartCosmatics: {\n        bgcolor: \"#282A2E\",\n        paletteColors: \"#C79E24\",\n        divlineAlpha: \"0\",\n        canvasBgColor: \"#282A2E\",\n        labelFontColor: \"#ffffff\",\n        theme: \"fusion\",\n        showDivLineValues: \"0\",\n        showValues: \"1\",\n        baseFont: \"Roboto\",\n        valueFontColor: \"#b4b4b6\",\n        plotSpacePercent: \"60\",\n        axisLineAlpha: \"80\",\n        showYAxisValues: \"1\",\n        yaxislinecolor: \"#434456\",\n        showYAxisLine: \"1\",\n        showdivlineValues: \"1\",\n        baseFontColor:\"#ffffff\",\n        baseFontSize: \"12\",\n        toolTipBgColor: \"#525357\",\n        toolTipColor: \"#F8F8F8\",\n        toolTipBorderColor: \"#525357\",\n        tooltipBorderAlpha: \"20\",\n        showToolTipShadow: \"1\",\n        toolTipPadding: \"10\",\n        anchorRadius: \"60\",\n        plotToolText: \"<b>$seriesName<b></br><b>Genre :</b> $label</br><b>Rating :</b> $Value\"\n    },\n}","import chartCosmatics from './chartConfig';\nexport default {\n\n  Netflix: {\n    revenueChartConfigs: {\n      type: \"mscombi2d\",\n      width: \"100%\",\n      height: \"300\",\n      containerBackgroundOpacity: '0',\n      dataFormat: \"json\",\n      dataSource: {\n        chart: {\n          bgcolor: \"##282A2E\",\n          canvasBgColor: \"##282A2E\",\n          animation: \"0\",\n          theme: \"fusion\",\n          plotfillalpha: \"15\",\n          plotFillAngle: \"90\",\n          showCanvasBorder: \"0\",\n          showLabels: \"1\",\n          divLineAlpha: \"50\",\n          divlineColor: \"#434456\",\n          showYAxisValues: \"1\",\n          showdivline: \"1\",\n          yaxisminvalue: \"1000\",\n          yaxismaxvalue:\"145\",\n          placeValuesInside: \"0\",\n          showLegend: \"0\",\n          showShadow: \"0\",\n          paletteColors: \"#62B58F\",\n          drawAnchors: \"0\",\n          showAlternateHGridColor: \"0\",\n          drawCrossLine: \"0\",\n          plotColorinTooltip: \"0\",\n          baseFontColor: \"#ffffff\",\n          valueFontColor: \"#b4b4b6\",\n          valueFontSize: \"14\",\n          baseFontSize: \"12\",\n          baseFont: \"Roboto\",\n          toolTipBgColor: \"#525357\",\n          toolTipColor: \"#F8F8F8\",\n          toolTipBorderColor: \"#525357\",\n          tooltipBorderAlpha: \"20\",\n          showToolTipShadow: \"1\",\n          toolTipPadding: \"10\",\n          numberPrefix: \"\",\n          formatNumberScale: \"1\",\n          numberScaleUnit: \"\",\n    \n          plotToolText: \"<b>Global Revenue</b></br><b>Year : </b>$label</br><b>Revenue : </b> $dataValue\"\n  \n      },\n        categories: [{\n          category: [{\n            label: \"2013\"\n          },\n          {\n            label: \"2014\"\n          },\n          {\n            label: \"2015\"\n          },\n          {\n            label: \"2016\"\n          },\n          {\n            label: \"2017\"\n          },\n          {\n            label: \"2018\"\n          }\n          ]\n        }],\n        dataset: [{\n          renderAs: \"splinearea\",\n          showValues: \"0\",\n          data: [\n\n            {\n              value: \"46\"\n            },\n            {\n              value: \"78\"\n            },\n            {\n              value: \"651\"\n            },\n            {\n              value: \"867\"\n            },\n            {\n              value: \"111\"\n            },\n            {\n              value: \"128\"\n            }\n          ]\n        },\n        {\n          renderAs: \"spline\",\n          showValues: \"1\",\n          data: [\n\n            {\n              value: \"14\"\n            },\n            {\n              value: \"18\"\n            },\n            {\n              value: \"25\"\n            },\n            {\n              value: \"23\"\n            },\n            {\n              value: \"17\"\n            },\n            {\n              value: \"33\"\n            }\n          ]\n        }\n        ]\n      }\n    },\n    demogrphyconfig: {\n      type: \"doughnut2d\",\n      width: \"100%\",\n      height: \"160\",\n      containerBackgroundOpacity: '0',\n      dataFormat: \"json\",\n      dataSource: {\n        \"chart\": chartCosmatics.demographyChartCosmatics,\n        \"data\": [{\n          \"label\": \"50-64 Years\",\n          \"value\": \"32\"\n        }, {\n          \"label\": \"30-49 Years\",\n          \"value\": \"36\"\n        },{\n          \"label\": \"18-29 Years\",\n          \"value\": \"32\"\n        } ]\n      }\n    },\n    subscriptionConfig: {\n\n      type: \"column2d\",\n      width: \"100%\",\n      height: \"204\",\n      containerBackgroundOpacity: '0',\n      dataFormat: \"json\",\n      dataSource: {\n        chart: {\n          theme: \"fusion\",\n          bgcolor: \"#282A2E\",\n          canvasBgColor: \"#282A2E\",\n          paletteColors: \"#6957DA\",\n          numbersuffix: \"M\",\n          plotSpacePercent: \"60\",\n          formatNumberScale: \"1\",\n          showdivlineValues: \"0\",\n          drawCrossLine: \"1\",\n          yaxisMaxValue:\"650\",\n          crossLineColor: \"#575961\",\n          crossLineAlpha: \"15\",\n          showLimits: \"0\",\n          showValues: \"1\",\n          divlineAlpha: \"0\",\n          baseFontSize: \"12\",\n          baseFont: \"Roboto\",\n          toolTipBgColor: \"#525357\",\n          toolTipColor: \"#F8F8F8\",\n          toolTipBorderColor: \"#525357\",\n          tooltipBorderAlpha: \"20\",\n          showToolTipShadow: \"1\",\n          toolTipPadding: \"10\",\n          plotToolText: \"<b>Year : </b>$label </br><b>Subscribers :</b> $datavalue\",\n          labelFontColor: \"#ffffff\",\n          valueFontColor: \"#81809C\"\n  \n      },\n        data: [\n\n          {\n            label: \"2013\",\n            value: \"158.5\"\n          },\n          {\n            label: \"2014\",\n            value: \"208.86\"\n          },\n          {\n            label: \"2015\",\n            value: \"271.75\"\n          },\n          {\n            label: \"2016\",\n            value: \"345.22\"\n          },\n          {\n            label: \"2017\",\n            value: \"429.53\"\n          },\n          {\n            label: \"2018\",\n            value: \"539.82\"\n          }\n        ]\n      }\n    },\n    awardConfigs: {\n      type: \"overlappedColumn2d\",\n      width: \"100%\",\n      height: \"330\",\n      containerBackgroundOpacity: '0',\n      dataFormat: \"json\",\n      dataSource: {\n        chart:  {\n          bgcolor: \"#282A2E\",\n          canvasBgColor: \"#282A2E\",\n          showLabels: \"1\",\n          drawCrossLine: \"0\",\n          divLineAlpha: \"0\",\n          showYAxisValues: \"0\",\n          showValues: \"1\",\n          placeValuesInside: \"0\",\n          shadow: \"0\",\n          legendPadding: \"0\",\n          yAxisMaxValue: 130,\n          showShadow: \"0\",\n          paletteColors: \"#942F1C,#DD614A\",\n          drawAnchors: \"0\",\n          showAlternateHGridColor: \"0\",\n          legenditemfontcolor: \"#ffffff\",\n          plotColorinTooltip: \"0\",\n          valueFontColor: \"#b4b4b6\",\n          labelFontColor: \"#ffffff\",\n          baseFontSize: \"12\",\n          baseFont: \"Roboto\",\n          toolTipBgColor: \"#525357\",\n          toolTipColor: \"#F8F8F8\",\n          toolTipBorderColor: \"#525357\",\n          tooltipBorderAlpha: \"20\",\n          showToolTipShadow: \"1\",\n          toolTipPadding: \"10\",\n          plotToolText: \"<b>Year :</b> $label</br><b>$seriesname :</b> $datavalue\",\n          theme: \"fusion\"\n  \n      },\n        categories: [{\n          category: [{\n            label: \"2013\"\n          }, {\n            label: \"2014\"\n          }, {\n            label: \"2015\"\n          }, {\n            label: \"2016\"\n          }, {\n            label: \"2017\"\n          }, {\n            label: \"2018\"\n          }]\n        }],\n        dataset: [{\n          seriesname: \"nombre des traces ayant une attaque r√©ussite\",\n          data: [{\n            value: \"13\"\n          }, {\n            value: \"31\"\n          }, {\n            value: \"34\"\n          }, {\n            value: \"54\"\n          }, {\n            value: \"91\"\n          }, {\n            value: \"112\"\n          }]\n        }, \n      ]   \n      }\n    },\n    subRegion: {\n      type: \"world\",\n      width: \"100%\",\n      height: \"430\",\n      containerBackgroundOpacity: '0',\n      dataFormat: \"json\",\n      dataSource: {\n        \"chart\": chartCosmatics.subregionChartCosmatics,\n        colorrange: {\n          minvalue: \"0\",\n          startlabel: \"Low\",\n          endlabel: \"High\",\n          code: \"#4A4C4F\",\n          gradient: \"1\",\n          alpha: 0,\n          color: [{\n            minvalue: \"0\",\n            maxvalue: \"1\",\n            code: \"#DEDAF1\",\n\n          },\n          {\n            minvalue: \"2\",\n            maxvalue: \"5\",\n            code: \"#BEB3E2\",\n\n          },\n          {\n            minvalue: \"5\",\n            maxvalue: \"10\",\n            code: \"#ADA1DB\",\n\n          },\n          {\n            minvalue: \"11\",\n            maxvalue: \"20\",\n            code: \"#786BC3\",\n\n          },\n          {\n            minvalue: \"21\",\n            maxvalue: \"70\",\n            code: \"#524CB5\",\n\n          }\n\n          ]\n        },\n        \"data\": [{\n          \"id\": \"NA\",\n          \"value\": \"66\",\n          useHoverColor: \"0\"\n        },\n        {\n          \"id\": \"SA\",\n          \"value\": \"32\",\n          useHoverColor: \"0\"\n        },\n        {\n          \"id\": \"AS\",\n          \"value\": \"17\",\n          useHoverColor: \"0\"\n        },\n        {\n          \"id\": \"EU\",\n          \"value\": \"5\",\n          useHoverColor: \"0\"\n        },\n        {\n          \"id\": \"AF\",\n          \"value\": \"3\",\n          useHoverColor: \"0\"\n        },\n        {\n          \"id\": \"AU\",\n          \"value\": \"1\",\n          useHoverColor: \"0\"\n        }\n        ]\n\n      },\n\n    },\n    imdbRatingConfig: {\n      type: \"bar2d\",\n      width: \"100%\",\n      height: \"330\",\n      containerBackgroundOpacity: '0',\n      dataFormat: \"json\",\n      dataSource: {\n        chart: chartCosmatics.imdbRatingChartCosmatics,\n\n        data: [{\n          label: \"Janvier\",\n          value: \"20\"\n        },\n        {\n          label: \"Fevrier\",\n          value: \"19\"\n        },\n        {\n          label: \"Mars\",\n          value: \"17\"\n        },\n        {\n          label: \"Avril\",\n          value: \"15\"\n        },\n        {\n          label: \"Mai\",\n          value: \"15\"\n        },\n        {\n          label: \"JUIN\",\n          value: \"14\"\n        },\n        {\n          label: \"JUIllet\",\n          value: \"13\"\n        },\n        {\n          label: \"Aout\",\n          value: \"10\"\n        },\n        {\n          label: \"Septembre\",\n          value: \"7\"\n        },\n        {\n          label: \"Octobre\",\n          value: \"6\"\n        },\n        {\n          label: \"NOvombre\",\n          value: \"4\"\n        },\n        {\n          label: \"Decembre\",\n          value: \"3\"\n        }\n        ]\n\n      }\n    }\n  }\n}\n","import React, {Component} from 'react';\r\nimport {Bar, Line, Pie} from 'react-chartjs-2';\r\n\r\nclass Charts extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            data: {\r\n                labels : [\"1\",\"2\",\"3\",\"4\",\"5\"],\r\n                datasets :[ \r\n                    {\r\n                        label:\"les identit√©s en cours\", \r\n                        backgroundColor:\"rgba(255,0,255,0.75)\",\r\n                        data : [4,5,1,10,32,2,12]\r\n                    },\r\n                    {\r\n                        label:\"les identit√©s \", \r\n                        backgroundColor:\"rgba(0,255,0,0.75)\",\r\n                        data : [14,15,21,0,12,24,32]\r\n        \r\n                    }\r\n                ]\r\n            },\r\n            \r\n            chartData: props.chartData\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    static defaultProps={\r\n        displayTitle: true,\r\n        displayLegend: true,\r\n        legendPosition:'right',\r\n        location:'City'\r\n\r\n    }\r\n    \r\n        \r\n\r\n    render(){\r\n        return(\r\n            <section id=\"subscribers\" className=\"section is-top-padded\">\r\n                <span className=\"has-image\">\r\n                    <span className=\"badge is-feed\">\r\n                        <img  alt=\"\" /></span>\r\n                    <h3 className=\"snapshot image-has-text\"> information sur les comptes d'utlisateur </h3>\r\n                   \r\n                </span>\r\n                <div className=\"tile is-ancestor\">\r\n                    <div className=\"tile is-6 is-parent\">\r\n                        <div className=\"tile is-12 is-child box\">\r\n                            <p className=\"sub-caption\"> comptes cr√©es </p>\r\n             <Bar\r\n               data={this.state.chartData}\r\n                options={{\r\n                  title:{\r\n                      display: this.props.displayTitle,\r\n                      text:this.props.location,\r\n                      fontSize:22\r\n                  },\r\n                  legend:{\r\n                      display:this.props.displayLegend,\r\n                      position:this.props.legendPosition \r\n                  }\r\n                    \r\n                }\r\n            }\r\n            />\r\n            \r\n             </div>\r\n                    </div>\r\n                    <div className=\"tile is-6 is-vertical is-parent\">\r\n                        <div className=\"tile is-child box\">\r\n                            <p className=\"sub-caption\">demande sur les comptes</p>\r\n                <Line\r\n               data={this.state.chartData}\r\n                options={{\r\n                  title:{\r\n                      display: this.props.displayTitle,\r\n                      text:\"nombre des comptes ayant un mot de passe faible\" ,\r\n                      fontSize:22\r\n                  },\r\n                  legend:{\r\n                      display:this.props.displayLegend,\r\n                      position:this.props.legendPosition \r\n                  }\r\n                    \r\n                }\r\n                }\r\n            \r\n            />\r\n            </div>\r\n                        <div className=\"tile is-child box\">\r\n                            <p className=\"sub-caption\">nombre des comptes actifs </p>\r\n                <Pie\r\n               data={this.state.chartData}\r\n                options={{\r\n                  title:{\r\n                      display: this.props.displayTitle,\r\n                      text:\"nombre de trace ayant une attaque r√©ussite\",\r\n                      fontSize:22\r\n                  },\r\n                  legend:{\r\n                      display:this.props.displayLegend,\r\n                      position:this.props.legendPosition \r\n                  }\r\n                    \r\n                }\r\n                }\r\n                \r\n\r\n            />\r\n            \r\n            \r\n             \r\n </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Charts;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Caption from './Caption';\nimport KpiData from '../utils/kpiData';\nimport Kpi from './Kpi';\nimport Subscribers from './Comptes';\nimport Revenue from './nbacc√©es';\nimport AwardRating from './password';\nimport DataSource from '../utils/config';\nimport Charts from './Charts';\nclass Dashboard extends Component {\n\n    constructor(props) {\n        super(props);\n        this.sub = React.createRef();\n        this.rev = React.createRef();\n        this.award = React.createRef();\n        this.state = {\n            chartData:{},\n            menus: [\n                { id: \"compte\", value: \"compte\", active: true },\n                \n            ],\n            caption: \"les indicateurs\",\n            kpiData: KpiData.Netflix,\n            dataSource: DataSource.Netflix\n        }\n    }\n    componentWillMount(){\n        this.getchartData();\n      }\n    menuClick = (id) => {\n       \n        this.setState({ \"caption\": id });\n        this.setState({ \"kpiData\": KpiData[id] });\n        this.setState({ \"dataSource\": DataSource[id] })\n  \n       \n    }\n    kpiClick = (id) => {\n        if (id === \"nombre totale des comptes \")\n            ReactDOM.findDOMNode(this.sub.current).scrollIntoView({ block: 'center',  behavior: 'smooth' });\n    }\n    getchartData(){\n        //ajax call here\n        this.setState({\n          chartData: {\n              labels: ['Janvier', 'Fevrier' , 'Mars' , 'Avril' , 'Mai' ,\n               'Juin', 'Juillet' , 'Aout' ,'Septembre' , 'Octobre' ,'Novombre' , 'Decembre'],\n               datasets:[\n                   {\n                       label:'compte',\n                       data: [\n                           28,\n                           15,\n                           17,\n                           20,\n                           33,\n                           49,\n                           52,\n                           60,\n                           30,\n                           27,\n                           25,\n                           12,\n    \n    \n                       ],\n                       backgroundColor:[\n                           'rgba(255, 99 ,132 ,0.6)',\n                           'rgba(54, 162 ,235 ,0.6)',\n                           'rgba(255, 206 ,86 ,0.6)',\n                           'rgba(75, 192 ,192 ,0.6)',\n                           'rgba(135, 102 ,255 ,0.6)',\n                           'rgba(255, 159 ,64 ,0.6)',\n                           'rgba(255, 99 ,132 ,0.6)',\n                           'rgba(85, 102 ,255 ,0.6)',\n                           'rgba(7, 120 ,200 ,0.6)',\n                           'rgba(195, 117 ,205 ,0.6)',\n                           'rgba(3, 102 ,320 ,0.6)',\n                           'rgba(89, 133 ,122 ,0.6)',\n                       ]\n                   }\n               ]\n          }\n          }\n        )\n      }\n    render() {\n        return (\n            <div className=\"dashboard\">\n                <nav className=\"navbar is-primary is-fixed-top\" >\n                    <div className=\"navbar-brand\">\n                        <div className=\"is-logo\">\n                            <h2 className=\"logo-wrapper\">T</h2>\n                        </div>\n                        <div className=\"navbar-item\">\n                            <span className=\"has-space\">\n                                <h2 className=\"caption\">Tbaleau de Bord</h2>\n                            </span>\n                        </div>\n                    </div>\n                </nav >\n                <div className=\"container\">\n                    <Caption caption={this.state.caption} />\n                    <section className=\"section is-kpi\">\n                        <span className=\"has-image\">\n                            <h3 className=\"snapshot\"> Les indicateurs </h3>\n                        </span>\n                    </section>\n                    <Subscribers value={this.state.kpiData[0].value} icon={this.state.kpiData[0].icon} datasource={this.state.dataSource} ref={this.sub} />\n                    <nb value={this.state.kpiData[1].value} icon={this.state.kpiData[1].icon} datasource={this.state.dataSource} ref={this.rev} />\n                    <AwardRating awardValue={this.state.kpiData[2].value} awardIcon={this.state.kpiData[2].icon} ratingValue={this.state.kpiData[3].value} ratingIcon={this.state.kpiData[3].icon} datasource={this.state.dataSource} ref={this.award} />\n                    <div className=\"App\">\n      <Charts chartData={this.state.chartData} location= \"nombre des comptes inactifs durant toute l'ann√©e \" legendPosition='bottom'/>\n      \n\n      </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SignUpForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            name: '',\r\n            hasAgreed: false\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        let name = target.name;\r\n\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        console.log('The form was submitted with the following data:');\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"FormCenter\">\r\n            <form onSubmit={this.handleSubmit} className=\"FormFields\">\r\n              <div className=\"FormField\">\r\n                <label className=\"FormField__Label\" htmlFor=\"name\">Full Name</label>\r\n                <input type=\"text\" id=\"name\" className=\"FormField__Input\" placeholder=\"Enter your full name\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n              </div>\r\n              <div className=\"FormField\">\r\n                <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n              </div>\r\n              <div className=\"FormField\">\r\n                <label className=\"FormField__Label\" htmlFor=\"email\">E-Mail Address</label>\r\n                <input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n              </div>\r\n\r\n              <div className=\"FormField\">\r\n                <label className=\"FormField__CheckboxLabel\">\r\n                    <input className=\"FormField__Checkbox\" type=\"checkbox\" name=\"hasAgreed\" value={this.state.hasAgreed} onChange={this.handleChange} /> I agree all statements in <a href=\"\" className=\"FormField__TermsLink\">terms of service</a>\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"FormField\">\r\n                  <button className=\"FormField__Button mr-20\">Sign Up</button> <Link to=\"/sign-in\" className=\"FormField__Link\">I'm already member</Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nclass SignInForm extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let target = e.target;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        let name = target.name;\r\n\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        console.log('The form was submitted with the following data:');\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"FormCenter\">\r\n            <form onSubmit={this.handleSubmit} className=\"FormFields\" onSubmit={this.handleSubmit}>\r\n            <div className=\"FormField\">\r\n                <label className=\"FormField__Label\" htmlFor=\"email\">E-Mail Address</label>\r\n                <input type=\"email\" id=\"email\" className=\"FormField__Input\" placeholder=\"Enter your email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n              </div>\r\n\r\n              <div className=\"FormField\">\r\n                <label className=\"FormField__Label\" htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" className=\"FormField__Input\" placeholder=\"Enter your password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n              </div>\r\n\r\n              <div className=\"FormField\">\r\n              <Link to=\"/Dashboard\" activeClassName=\"PageSwitcher__Item--Active\" className=\"FormField__Button mr-20\">Sign in</Link>\r\n\r\n                  <Link to=\"/\" className=\"FormField__Link\">Create an account</Link>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignInForm;\r\n","import React, { Component } from 'react';\nimport '../node_modules/bulma/css/bulma.css';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport { HashRouter as Router, Route, Link, NavLink,Switch } from 'react-router-dom';\nimport SignUpForm from './pages/SignUpForm';\nimport SignInForm from './components/SignInForm';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Router basename=\"/react-auth-ui/\">\n            <div className=\"app\">\n                <div className=\"PageSwitcher\">\n                <NavLink to=\"/sign-in\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign In</NavLink>\n                <NavLink exact to=\"/\" activeClassName=\"PageSwitcher__Item--Active\" className=\"PageSwitcher__Item\">Sign Up</NavLink>\n              </div>\n              <div className=\"FormTitle\">\n              </div>\n           <Switch>\n              <Route exact path=\"/\" component={SignUpForm}>\n              </Route>\n              <Route path=\"/sign-in\" component={SignInForm}>\n              \n              </Route>\n              <Route exact bath=\"/Dashboard\" component={Dashboard} />\n              </Switch>\n          \n               \n            </div>\n           \n            </Router>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/doller.46deee71.svg\";","module.exports = __webpack_public_path__ + \"static/media/rss.549aa6e7.svg\";","module.exports = __webpack_public_path__ + \"static/media/trophy.9a13eaba.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.048aef30.svg\";"],"sourceRoot":""}